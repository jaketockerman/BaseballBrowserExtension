# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI
on:
  push:
    branches: [ main ]
    paths:
      - 'extension/**' # Trigger only if changes are in the backend folder
  pull_request:
    branches: [ main ]
    paths:
      - 'extension/**' # Trigger only if changes are in the backend folder

jobs:
  sbom:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: CycloneDX Node.js Generate SBOM
      # You may pin to the exact commit or the version.
      # uses: CycloneDX/gh-node-module-generatebom@b5753d516608ed84f7a40eb19b7687b5828b9b2d
        uses: CycloneDX/gh-node-module-generatebom@master
        with:
          path: ./extension
          output: ./extension_bom.xml
      - name: Upload SBOM
        uses: actions/upload-artifact@v2.3.1
        with:
          # Artifact name
          name: SBOM_EXTENSION
          # A file, directory or wildcard pattern that describes what to upload
          # upload-artifact does NOT use working-directory
          path: ./extension_bom.xml
          if-no-files-found: warn

  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    defaults:
      run:
        working-directory: ./extension
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: extension/package-lock.json
    - run: npm ci
    - run: npm run build --if-present
    - run: npm run test
      env:
        CI: true
    - name: Upload extension
      uses: actions/upload-artifact@v2.3.1
      with:
        # Artifact name
        name: extension
        # A file, directory or wildcard pattern that describes what to upload
        # upload-artifact does NOT use working-directory
        path: ./extension/build/
        if-no-files-found: error
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v41
    - name: Pack extension
      if: github.event_name != 'pull_request' && contains(steps.changed-files.outputs.modified_files, 'manifest.json')
      uses: cardinalby/webext-buildtools-pack-extension-dir-action@v1
      with:
        extensionDir: 'extension/build'
        zipFilePath: 'extension/build/extension.zip'
    - name: Upload an extension to Chrome Web Store
      if: github.event_name != 'pull_request' && contains(steps.changed-files.outputs.modified_files, 'manifest.json')
      uses: cardinalby/webext-buildtools-chrome-webstore-upload-action@1.0.8
      with:
        # Path to WebExtension directory
        zipFilePath: extension/build/extension.zip
        # Your extension id in Chrome Web Store
        extensionId: pjgfdnmlgnbldfgfmneimommafcobhlk
        # Web Store API Client Id (use secrets!) required to obtain access token
        apiClientId: ${{ secrets.CHROME_CLIENT_ID }}
        # Web Store API Client Secret (use secrets!) required to obtain access token
        apiClientSecret: ${{ secrets.CHROME_CLIENT_SECRET }}
        # Web Store API Refresh token (use secrets!) required to obtain access token
        apiRefreshToken: ${{ secrets.CHROME_REFRESH_TOKEN }}
