name: Python CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  sbom_pybaseball:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: CycloneDX Node.js Generate SBOM
      # You may pin to the exact commit or the version.
      # uses: CycloneDX/gh-node-module-generatebom@b5753d516608ed84f7a40eb19b7687b5828b9b2d
        uses: CycloneDX/gh-python-generate-sbom@v1.0.0
        with:
         input: ./backend/docker/pybaseball/requirements.txt -r
         output: ./pybaseball_bom.xml
      - name: Upload SBOM
        uses: actions/upload-artifact@v2.3.1
        with:
          # Artifact name
          name: SBOM_PYBASEBALL
          # A file, directory or wildcard pattern that describes what to upload
          # upload-artifact does NOT use working-directory
          path: ./pybaseball_bom.xml
          if-no-files-found: warn
  sbom_mlbstats:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: CycloneDX Node.js Generate SBOM
      # You may pin to the exact commit or the version.
      # uses: CycloneDX/gh-node-module-generatebom@b5753d516608ed84f7a40eb19b7687b5828b9b2d
        uses: CycloneDX/gh-python-generate-sbom@v1.0.0
        with:
          input: ./backend/docker/mlbstats/requirements.txt -r
          output: ./mlbstats_bom.xml
      - name: Upload SBOM
        uses: actions/upload-artifact@v2.3.1
        with:
          # Artifact name
          name: SBOM_MLBSTATS
          # A file, directory or wildcard pattern that describes what to upload
          # upload-artifact does NOT use working-directory
          path: ./mlbstats_bom.xml
          if-no-files-found: warn
  docker_mlbstats:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        # Build and Push if not a PR
      - name: Build and push Docker images to Dockerhub
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v2.10.0
        with:
          # Build's context is the set of files located in the specified PATH or URL
          context: ./backend
          # Path to the Dockerfile
          file: ./backend/docker/mlbstats/Dockerfile
          # Push is a shorthand for --output=type=registry
          push: true
          # List of tags
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/mlbstats:latest
        # Only Build if PR
      - name: Build Docker images on PR
        if: github.event_name == 'pull_request'
        uses: docker/build-push-action@v2.10.0
        with:
          # Build's context is the set of files located in the specified PATH or URL
          context: ./backend
          # Path to the Dockerfile
          file: ./backend/docker/mlbstats/Dockerfile
          # Push is a shorthand for --output=type=registry
          push: false
          # List of tags
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/mlbstats:latest
  docker_pybaseball:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # Build and Push if not a PR
      - name: Build and push Docker images to Dockerhub
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v2.10.0
        with:
          # Build's context is the set of files located in the specified PATH or URL
          context: ./backend
          # Path to the Dockerfile
          file: ./backend/docker/pybaseball/Dockerfile
          # Push is a shorthand for --output=type=registry
          push: true
          # List of tags
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/pybaseball:latest
        # Only Build if PR
      - name: Build Docker images on PR
        if: github.event_name == 'pull_request'
        uses: docker/build-push-action@v2.10.0
        with:
          # Build's context is the set of files located in the specified PATH or URL
          context: ./backend
          # Path to the Dockerfile
          file: ./backend/docker/pybaseball/Dockerfile
          # Push is a shorthand for --output=type=registry
          push: false
          # List of tags
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/pybaseball:latest
